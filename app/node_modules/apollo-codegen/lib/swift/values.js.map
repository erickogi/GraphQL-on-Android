{"version":3,"sources":["../../src/swift/values.js"],"names":["escapedString","multilineString","literalFromValue","string","replace","context","lines","split","forEach","line","index","isLastLine","length","printOnNewline","value","Array","isArray","map","key"],"mappings":";;;;;;;;;;;;;;;;;;QAKgBA,a,GAAAA,a;QAIAC,e,GAAAA,e;QAQAC,gB,GAAAA,gB;;AAjBhB;;;;AAKO,SAASF,aAAT,CAAuBG,MAAvB,EAA+B;AACpC,SAAOA,OAAOC,OAAP,CAAe,IAAf,EAAqB,KAArB,CAAP;AACD;;AAEM,SAASH,eAAT,CAAyBI,OAAzB,EAAkCF,MAAlC,EAA0C;AAC/C,QAAMG,QAAQH,OAAOI,KAAP,CAAa,IAAb,CAAd;AACAD,QAAME,OAAN,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,UAAMC,aAAaD,SAASJ,MAAMM,MAAN,GAAe,CAA3C;AACAP,YAAQQ,cAAR,CAAwB,IAAGb,cAAcS,IAAd,CAAoB,GAAxB,IAA8BE,aAAa,IAAb,GAAoB,EAAlD,CAAvB;AACD,GAHD;AAID;;AAEM,SAAST,gBAAT,CAA0BY,KAA1B,EAAiC;AACtC,MAAIC,MAAMC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxB,WAAO,oBAAK,GAAL,EAAU,oBAAKA,MAAMG,GAAN,CAAUf,gBAAV,CAAL,EAAkC,IAAlC,CAAV,EAAmD,GAAnD,CAAP;AACD,GAFD,MAEO,IAAI,OAAOY,KAAP,KAAiB,QAArB,EAA+B;AACpC,WAAO,oBAAK,GAAL,EAAU,oBAAK,uBAAeA,KAAf,EAAsBG,GAAtB,CAA0B,UAAkB;AAAA;;AAAA,UAAhBC,GAAgB;AAAA,UAAXJ,KAAW;;AAChE,aAAQ,IAAGI,GAAI,MAAKhB,iBAAiBY,KAAjB,CAAwB,EAA5C;AACD,KAFqB,CAAL,EAEb,IAFa,CAAV,EAEI,GAFJ,CAAP;AAGD,GAJM,MAIA;AACL,WAAO,yBAAeA,KAAf,CAAP;AACD;AACF","file":"values.js","sourcesContent":["import {\n  join,\n  wrap,\n} from '../utilities/printing';\n\nexport function escapedString(string) {\n  return string.replace(/\"/g, '\\\\\"');\n}\n\nexport function multilineString(context, string) {\n  const lines = string.split('\\n');\n  lines.forEach((line, index) => {\n    const isLastLine = index != lines.length - 1;\n    context.printOnNewline(`\"${escapedString(line)}\"` + (isLastLine ? ' +' : ''));\n  });\n}\n\nexport function literalFromValue(value) {\n  if (Array.isArray(value)) {\n    return wrap('[', join(value.map(literalFromValue), ', '), ']');\n  } else if (typeof value === 'object') {\n    return wrap('[', join(Object.entries(value).map(([key, value]) => {\n      return `\"${key}\": ${literalFromValue(value)}`;\n    }), ', '), ']');\n  } else {\n    return JSON.stringify(value);\n  }\n}\n"]}